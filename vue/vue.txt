Vue.js             # cdn <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>

Structure
---------
Vue.createApp({    
    data() {	   
        return {   # inside return{} is where the reactive state is defined
		   # every key-value pair here becomes reactive
	}	   # vue will update the DOM upon any changes here
    },
    computed: {    # computed properties are written like methods 
                   # they are updated automatically when a dependency changes
                   # ie:   
    },              
    methods: {     # unlike computed properties, methods need to be called on, ie: through event handling
                   # declared like methods in a js object
    }              # ie: addTask() {...} called by -> <button @click="addTask">add</button>
  
}).mount('')       # vue apps are mounted to html elements - ie: .mount('body') / .mount('#app')


Core Concepts
-------------
[concept] - [what it does] - ie: []

{{ }} - output data - ie: {{ message }}
      # this is text interpolation
      # simple javascript expressions can also be written inside

v-model - two way binding - ie: <input v-model="name">

v-bind - binds attributes - ie: <img v-bind:src="imgURL"> / :src="imgURL"

v-on - event listener - ie: <button v-on:click="doThing"> / @click="doThing"

v-if / v-show - conditional rendering - ie: <p v-if="loggedIn">Welcome!</p>

v-for - looping - ie: <li v-for="item in items">{{ item }}</li>


More Concepts
-------------
v-show - toggle visibility of element - ie: <div v-show="lightSwitch">words</div>
       # you can code a button with v-on:click="lightSwitch = !lightSwitch" / @click=""
       # lightSwitch changing states from true/false will view/hide the element


Vue SFC from CLI - Vite
-----------------------
# npm init vue@latest
- cd into vue app directory after creating project
# npm install - install dependencies
# npm run dev - start dev server

